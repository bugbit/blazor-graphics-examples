<div class="d-flex flex-column min-vh-100 justify-content-center align-items-center">
    @if (isLoading)
    {
        <div>
            <h2>Loading @App?.Name</h2>
            <div class="progress mt-2" style="height: 2em;">
                <div id="progressbar" class="progress-bar progress-bar-striped progress-bar-animated"
                style="width: @(PercentLoaded)%; background-color: #204066;"></div>
            </div>
            <div>
                <span id="progressLabel" class="text-muted">@messageProgress</span>
            </div>
        </div>
    }
</div>

@code
{
    [Parameter]
    public GRApp? App { get; set; }

    [Parameter]
    public int PercentLoaded { get; set; } = 1;

    [Parameter]
    public EventCallback OnLoadedAssets { get; set; }

    private bool isLoading = true;
    private string messageProgress = "Init ...";

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        PercentLoaded = 1;
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            if (App != null && App.Assets.Count > 0)
            {
                var step = 100 / App.Assets.Count;

                foreach (var asset in App.Assets.Values)
                {
                    await asset.Load();
                    PercentLoaded += step;
                    StateHasChanged();
                }
            }
            await OnLoadedAssets.InvokeAsync();
        }
    }
}